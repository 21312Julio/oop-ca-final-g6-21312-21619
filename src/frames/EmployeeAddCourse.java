/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import databasecontrol.CourseManager;
import databasecontrol.DatabaseConnection;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import models.Courses;
import models.CoursesTable;

/**
 *
 * @author julio
 */
public class EmployeeAddCourse extends javax.swing.JFrame {

    DatabaseConnection connection = new DatabaseConnection();
    CourseManager cm = new CourseManager();
    Courses co = new Courses();
    int flag = 0;
    
    public EmployeeAddCourse() {
        initComponents();
        FillCourseTable("SELECT *FROM courses ORDER BY lecturer");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrameCoursesAdd = new javax.swing.JInternalFrame();
        jPanel1 = new javax.swing.JPanel();
        jLabelNameCourse = new javax.swing.JLabel();
        jLabelDayCourse = new javax.swing.JLabel();
        jLabelTimeCourse = new javax.swing.JLabel();
        jLabelLecturerCourse = new javax.swing.JLabel();
        jLabelClassroomCourse = new javax.swing.JLabel();
        jFormattedTextFieldCourseName = new javax.swing.JFormattedTextField();
        jFormattedTextFieldCourseLecturer = new javax.swing.JFormattedTextField();
        jFormattedTextFieldCourseClassroom = new javax.swing.JFormattedTextField();
        jComboBoxtCourseTime = new javax.swing.JComboBox<>();
        jComboBoxCourseDay = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCourses = new javax.swing.JTable();
        jFormattedTextFieldCourseSearch = new javax.swing.JFormattedTextField();
        jLabelCourseId = new javax.swing.JLabel();
        jFormattedTextFieldCourseId = new javax.swing.JFormattedTextField();
        jButton1 = new javax.swing.JButton();
        jButtonAddCourse = new javax.swing.JButton();
        jButtonSaveCourse = new javax.swing.JButton();
        jButtonCancelCourse = new javax.swing.JButton();
        jButtonEditCourse = new javax.swing.JButton();
        jButtonDeleteCourse = new javax.swing.JButton();
        jButtonManageLecturers = new javax.swing.JButton();
        jButtonManageStudents = new javax.swing.JButton();
        jButtonManageCourses = new javax.swing.JButton();
        jLabelBackgroundMainEmployee = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jInternalFrameCoursesAdd.setMaximizable(true);
        jInternalFrameCoursesAdd.setVisible(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelNameCourse.setText("Name");

        jLabelDayCourse.setText("Day");

        jLabelTimeCourse.setText("Time");

        jLabelLecturerCourse.setText("Lecturer");

        jLabelClassroomCourse.setText("Classroom");

        jFormattedTextFieldCourseName.setEnabled(false);
        jFormattedTextFieldCourseName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFieldCourseNameActionPerformed(evt);
            }
        });

        jFormattedTextFieldCourseLecturer.setEnabled(false);

        jFormattedTextFieldCourseClassroom.setEnabled(false);

        jComboBoxtCourseTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "09:00 - 12:15", "12:45 - 16:00", "16:45 - 20:00" }));
        jComboBoxtCourseTime.setEnabled(false);

        jComboBoxCourseDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" }));
        jComboBoxCourseDay.setEnabled(false);

        jTableCourses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableCourses.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCoursesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableCourses);

        jFormattedTextFieldCourseSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFieldCourseSearchActionPerformed(evt);
            }
        });

        jLabelCourseId.setText("ID");

        jFormattedTextFieldCourseId.setEnabled(false);

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelNameCourse)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jFormattedTextFieldCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jLabelLecturerCourse)
                        .addGap(18, 18, 18)
                        .addComponent(jFormattedTextFieldCourseLecturer, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelCourseId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jFormattedTextFieldCourseId, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextFieldCourseSearch))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelClassroomCourse)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jFormattedTextFieldCourseClassroom, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelTimeCourse)
                        .addGap(12, 12, 12)
                        .addComponent(jComboBoxtCourseTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelDayCourse)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxCourseDay, 0, 1, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNameCourse)
                    .addComponent(jFormattedTextFieldCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelLecturerCourse)
                    .addComponent(jFormattedTextFieldCourseLecturer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelClassroomCourse)
                    .addComponent(jFormattedTextFieldCourseClassroom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTimeCourse)
                    .addComponent(jComboBoxtCourseTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDayCourse)
                    .addComponent(jComboBoxCourseDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFormattedTextFieldCourseSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCourseId)
                    .addComponent(jFormattedTextFieldCourseId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jButtonAddCourse.setText("Add");
        jButtonAddCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddCourseActionPerformed(evt);
            }
        });

        jButtonSaveCourse.setText("Save");
        jButtonSaveCourse.setEnabled(false);
        jButtonSaveCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveCourseActionPerformed(evt);
            }
        });

        jButtonCancelCourse.setText("Cancel");
        jButtonCancelCourse.setEnabled(false);
        jButtonCancelCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelCourseActionPerformed(evt);
            }
        });

        jButtonEditCourse.setText("Edit");
        jButtonEditCourse.setEnabled(false);
        jButtonEditCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditCourseActionPerformed(evt);
            }
        });

        jButtonDeleteCourse.setText("Delete");
        jButtonDeleteCourse.setEnabled(false);
        jButtonDeleteCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteCourseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrameCoursesAddLayout = new javax.swing.GroupLayout(jInternalFrameCoursesAdd.getContentPane());
        jInternalFrameCoursesAdd.getContentPane().setLayout(jInternalFrameCoursesAddLayout);
        jInternalFrameCoursesAddLayout.setHorizontalGroup(
            jInternalFrameCoursesAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrameCoursesAddLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrameCoursesAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonDeleteCourse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonSaveCourse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonCancelCourse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonEditCourse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonAddCourse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jInternalFrameCoursesAddLayout.setVerticalGroup(
            jInternalFrameCoursesAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrameCoursesAddLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrameCoursesAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jInternalFrameCoursesAddLayout.createSequentialGroup()
                        .addComponent(jButtonAddCourse)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonSaveCourse)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonCancelCourse)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonEditCourse)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonDeleteCourse)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jInternalFrameCoursesAdd);
        jInternalFrameCoursesAdd.setBounds(160, 60, 560, 370);

        jButtonManageLecturers.setText("Manage Lecturers");
        getContentPane().add(jButtonManageLecturers);
        jButtonManageLecturers.setBounds(20, 400, 130, 22);

        jButtonManageStudents.setText("Manage Students");
        getContentPane().add(jButtonManageStudents);
        jButtonManageStudents.setBounds(20, 280, 130, 22);

        jButtonManageCourses.setText("Manage Courses");
        jButtonManageCourses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonManageCoursesActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonManageCourses);
        jButtonManageCourses.setBounds(20, 170, 130, 22);

        jLabelBackgroundMainEmployee.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bgemployeemain.png"))); // NOI18N
        getContentPane().add(jLabelBackgroundMainEmployee);
        jLabelBackgroundMainEmployee.setBounds(-3, -4, 730, 440);

        setSize(new java.awt.Dimension(739, 469));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonManageCoursesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonManageCoursesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonManageCoursesActionPerformed

    private void jButtonSaveCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveCourseActionPerformed
        if(jFormattedTextFieldCourseId.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Id Required");
            jFormattedTextFieldCourseId.requestFocus();
        } else if(jFormattedTextFieldCourseName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Name Required");
            jFormattedTextFieldCourseName.requestFocus();
        } else if(jFormattedTextFieldCourseLecturer.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Lecturer Required");
            jFormattedTextFieldCourseLecturer.requestFocus();
        } else if(jFormattedTextFieldCourseClassroom.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Classroom Required");
            jFormattedTextFieldCourseClassroom.requestFocus();
        } else {
            if(flag==1) {
                co.setId(jFormattedTextFieldCourseId.getText());
                co.setName(jFormattedTextFieldCourseName.getText());
                co.setLecturer(jFormattedTextFieldCourseLecturer.getText());
                co.setClassroom(jFormattedTextFieldCourseClassroom.getText());
                co.setTime((String) jComboBoxtCourseTime.getSelectedItem());
                co.setDay((String) jComboBoxCourseDay.getSelectedItem());
                cm.SaveCourse(co);
                jFormattedTextFieldCourseId.setText("");
                jFormattedTextFieldCourseName.setText("");
                jFormattedTextFieldCourseLecturer.setText("");
                jFormattedTextFieldCourseClassroom.setText("");
                jFormattedTextFieldCourseId.setEnabled(false);
                jFormattedTextFieldCourseName.setEnabled(false);
                jFormattedTextFieldCourseLecturer.setEnabled(false);
                jFormattedTextFieldCourseClassroom.setEnabled(false);
                jComboBoxtCourseTime.setEnabled(false);
                jComboBoxCourseDay.setEnabled(false);
                jButtonSaveCourse.setEnabled(false);
                jButtonCancelCourse.setEnabled(false);
                FillCourseTable("SELECT *FROM courses ORDER BY lecturer");
            } else {
                co.setId(jFormattedTextFieldCourseId.getText());
                co.setName(jFormattedTextFieldCourseName.getText());
                co.setLecturer(jFormattedTextFieldCourseLecturer.getText());
                co.setClassroom(jFormattedTextFieldCourseClassroom.getText());
                co.setTime((String) jComboBoxtCourseTime.getSelectedItem());
                co.setDay((String) jComboBoxCourseDay.getSelectedItem());
                cm.Edit(co);
                jFormattedTextFieldCourseId.setText("");
                jFormattedTextFieldCourseName.setText("");
                jFormattedTextFieldCourseLecturer.setText("");
                jFormattedTextFieldCourseClassroom.setText("");
                jFormattedTextFieldCourseName.setEnabled(false);
                jFormattedTextFieldCourseLecturer.setEnabled(false);
                jFormattedTextFieldCourseClassroom.setEnabled(false);
                jComboBoxtCourseTime.setEnabled(false);
                jComboBoxCourseDay.setEnabled(false);
                jButtonSaveCourse.setEnabled(false);
                jButtonAddCourse.setEnabled(true);
                jButtonCancelCourse.setEnabled(false);
                FillCourseTable("SELECT *FROM courses ORDER BY lecturer");
            }
        }
    }//GEN-LAST:event_jButtonSaveCourseActionPerformed

    private void jButtonAddCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddCourseActionPerformed
        flag = 1;
        jFormattedTextFieldCourseId.setEnabled(true);
        jFormattedTextFieldCourseName.setEnabled(true);
        jFormattedTextFieldCourseLecturer.setEnabled(true);
        jFormattedTextFieldCourseClassroom.setEnabled(true);
        jComboBoxtCourseTime.setEnabled(true);
        jComboBoxCourseDay.setEnabled(true);
        jButtonSaveCourse.setEnabled(true);
        jButtonCancelCourse.setEnabled(true);
        jFormattedTextFieldCourseId.setText("");
        jFormattedTextFieldCourseName.setText("");
        jFormattedTextFieldCourseLecturer.setText("");
        jFormattedTextFieldCourseClassroom.setText("");
        jButtonEditCourse.setEnabled(false);
        jButtonDeleteCourse.setEnabled(false);
        jFormattedTextFieldCourseSearch.setEnabled(false);
        jButton1.setEnabled(false);
        
    }//GEN-LAST:event_jButtonAddCourseActionPerformed

    private void jFormattedTextFieldCourseNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFieldCourseNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextFieldCourseNameActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        co.setSearch(jFormattedTextFieldCourseSearch.getText());
        Courses cou = cm.searchCourses(co);
        jFormattedTextFieldCourseName.setText(cou.getName());
        jFormattedTextFieldCourseId.setText(cou.getId());
        jFormattedTextFieldCourseLecturer.setText(cou.getLecturer());
        jFormattedTextFieldCourseClassroom.setText(cou.getClassroom());
        jComboBoxtCourseTime.setSelectedItem(cou.getTime());
        jComboBoxCourseDay.setSelectedItem(cou.getDay());
        jButtonEditCourse.setEnabled(true);
        jButtonDeleteCourse.setEnabled(true);
        jFormattedTextFieldCourseSearch.setEnabled(true);
        jButton1.setEnabled(true);
        FillCourseTable("SELECT *FROM courses WHERE id LIKE'%" +
                co.getSearch() + "%'");
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonCancelCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelCourseActionPerformed
        jFormattedTextFieldCourseId.setEnabled(!true);
        jFormattedTextFieldCourseName.setEnabled(!true);
        jFormattedTextFieldCourseLecturer.setEnabled(!true);
        jFormattedTextFieldCourseClassroom.setEnabled(!true);
        jComboBoxtCourseTime.setEnabled(!true);
        jComboBoxCourseDay.setEnabled(!true);
        jButtonSaveCourse.setEnabled(!true);
        jButtonCancelCourse.setEnabled(!true);
        jButtonAddCourse.setEnabled(true);
        jButtonEditCourse.setEnabled(false);
        jButtonDeleteCourse.setEnabled(false);
        jFormattedTextFieldCourseId.setText("");
        jFormattedTextFieldCourseName.setText("");
        jFormattedTextFieldCourseLecturer.setText("");
        jFormattedTextFieldCourseClassroom.setText("");
        jButton1.setEnabled(true);
        jFormattedTextFieldCourseSearch.setEnabled(true);
    }//GEN-LAST:event_jButtonCancelCourseActionPerformed

    private void jButtonEditCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditCourseActionPerformed
        flag = 2;
        jFormattedTextFieldCourseName.setEnabled(true);
        jFormattedTextFieldCourseLecturer.setEnabled(true);
        jFormattedTextFieldCourseClassroom.setEnabled(true);
        jComboBoxtCourseTime.setEnabled(true);
        jComboBoxCourseDay.setEnabled(true);
        jButtonSaveCourse.setEnabled(true);
        jButtonCancelCourse.setEnabled(true);
        jButtonEditCourse.setEnabled(false);
        jButtonAddCourse.setEnabled(false);
        jButtonDeleteCourse.setEnabled(false);
    }//GEN-LAST:event_jButtonEditCourseActionPerformed

    private void jButtonDeleteCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteCourseActionPerformed
        int answer = 0;
        answer = JOptionPane.showConfirmDialog(rootPane, "Confirm Delete?");
        if(answer==JOptionPane.YES_OPTION) {
            co.setId(jFormattedTextFieldCourseId.getText());
            cm.Delete(co);
            jFormattedTextFieldCourseId.setText("");
            jFormattedTextFieldCourseName.setText("");
            jFormattedTextFieldCourseLecturer.setText("");
            jFormattedTextFieldCourseClassroom.setText("");
            jFormattedTextFieldCourseName.setEnabled(false);
            jFormattedTextFieldCourseLecturer.setEnabled(false);
            jFormattedTextFieldCourseClassroom.setEnabled(false);
            jComboBoxtCourseTime.setEnabled(false);
            jComboBoxCourseDay.setEnabled(false);
            jButtonSaveCourse.setEnabled(false);
            jButtonAddCourse.setEnabled(true);
            jButtonCancelCourse.setEnabled(false);
            jButtonEditCourse.setEnabled(false);
            jButtonDeleteCourse.setEnabled(false);
            FillCourseTable("SELECT *FROM courses ORDER BY lecturer");
        }
    }//GEN-LAST:event_jButtonDeleteCourseActionPerformed

    private void jTableCoursesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCoursesMouseClicked
        String id = ""+jTableCourses.getValueAt(jTableCourses.getSelectedRow(), 0);
        connection.Connection();
        
        connection.ExecuteSQL("SELECT *FROM courses WHERE id='"+id+"'");
        try {
            connection.rs.first();
            jFormattedTextFieldCourseId.setText(connection.rs.getString("id"));
            jFormattedTextFieldCourseName.setText(connection.rs.getString("name"));
            jFormattedTextFieldCourseLecturer.setText(connection.rs.getString("lecturer"));
            jFormattedTextFieldCourseClassroom.setText(connection.rs.getString("classroom"));
            jComboBoxtCourseTime.setSelectedItem(connection.rs.getString("time"));
            jComboBoxCourseDay.setSelectedItem(connection.rs.getString("day"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Selection Error:\n" + ex.getMessage());
        }
        
        jButtonEditCourse.setEnabled(true);
        jButtonDeleteCourse.setEnabled(true);
        
        connection.Desconnect();
    }//GEN-LAST:event_jTableCoursesMouseClicked

    private void jFormattedTextFieldCourseSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFieldCourseSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextFieldCourseSearchActionPerformed

    
    public void FillCourseTable(String sql) {
        ArrayList data = new ArrayList();
        String [] columns = new String []{"id","name","lecturer","classroom",
            "time","day"};
        connection.Connection(); 
        connection.ExecuteSQL(sql);
        try {
            connection.rs.first();
            do {
                data.add(new Object[]{connection.rs.getString("id"),
                        connection.rs.getString("name"),
                        connection.rs.getString("lecturer"),
                        connection.rs.getString("classroom"),
                        connection.rs.getString("time"),
                        connection.rs.getString("day")});  
            } while(connection.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Search for another ID");
        }
        CoursesTable ctmodel = new CoursesTable(data, columns);
        jTableCourses.setModel(ctmodel);
        jTableCourses.getColumnModel().getColumn(0).setPreferredWidth(100);
        jTableCourses.getColumnModel().getColumn(0).setResizable(false);
        jTableCourses.getColumnModel().getColumn(1).setPreferredWidth(220);
        jTableCourses.getColumnModel().getColumn(1).setResizable(false);
        jTableCourses.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTableCourses.getColumnModel().getColumn(2).setResizable(false);
        jTableCourses.getColumnModel().getColumn(3).setPreferredWidth(50);
        jTableCourses.getColumnModel().getColumn(3).setResizable(false);
        jTableCourses.getColumnModel().getColumn(4).setPreferredWidth(100);
        jTableCourses.getColumnModel().getColumn(4).setResizable(false);
        jTableCourses.getColumnModel().getColumn(5).setPreferredWidth(80);
        jTableCourses.getColumnModel().getColumn(5).setResizable(false);
        jTableCourses.getTableHeader().setReorderingAllowed(false);
        jTableCourses.setAutoResizeMode(jTableCourses.AUTO_RESIZE_OFF);
        jTableCourses.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        connection.Desconnect();
    }  
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeAddCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeAddCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeAddCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeAddCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeAddCourse().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAddCourse;
    private javax.swing.JButton jButtonCancelCourse;
    private javax.swing.JButton jButtonDeleteCourse;
    private javax.swing.JButton jButtonEditCourse;
    private javax.swing.JButton jButtonManageCourses;
    private javax.swing.JButton jButtonManageLecturers;
    private javax.swing.JButton jButtonManageStudents;
    private javax.swing.JButton jButtonSaveCourse;
    private javax.swing.JComboBox<String> jComboBoxCourseDay;
    private javax.swing.JComboBox<String> jComboBoxtCourseTime;
    private javax.swing.JFormattedTextField jFormattedTextFieldCourseClassroom;
    private javax.swing.JFormattedTextField jFormattedTextFieldCourseId;
    private javax.swing.JFormattedTextField jFormattedTextFieldCourseLecturer;
    private javax.swing.JFormattedTextField jFormattedTextFieldCourseName;
    private javax.swing.JFormattedTextField jFormattedTextFieldCourseSearch;
    private javax.swing.JInternalFrame jInternalFrameCoursesAdd;
    private javax.swing.JLabel jLabelBackgroundMainEmployee;
    private javax.swing.JLabel jLabelClassroomCourse;
    private javax.swing.JLabel jLabelCourseId;
    private javax.swing.JLabel jLabelDayCourse;
    private javax.swing.JLabel jLabelLecturerCourse;
    private javax.swing.JLabel jLabelNameCourse;
    private javax.swing.JLabel jLabelTimeCourse;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableCourses;
    // End of variables declaration//GEN-END:variables
}


